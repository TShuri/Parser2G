import tkinter as tk
from tkinter import scrolledtext
from gui.parser.ginfo_frame import GinfoFrame
from gui.parser.fias_frame import FiasFrame


def run_in_thread(func):
    import threading
    def wrapper():
        threading.Thread(target=func).start()
    return wrapper

class App:
    def __init__(self, root):
        self.root = root
        self.root.title("–ü–∞—Ä—Å–∏–Ω–≥ –¥–∞–Ω–Ω—ã—Ö")
        self.root.geometry("800x600")

        # –í—ã–±–æ—Ä –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –∞–¥—Ä–µ—Å–æ–≤
        self.source_var = tk.StringVar(value="GINFO")  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤—ã–±—Ä–∞–Ω–æ GINFO

        self.radio_frame = tk.Frame(root)
        self.radio_frame.grid(row=0, column=0, padx=10, pady=5, sticky="w")  # –†–∞–∑–º–µ—â–µ–Ω–∏–µ –≤ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–µ

        self.ginfo_checkbox = tk.Radiobutton(self.radio_frame, text="GINFO", variable=self.source_var, value="GINFO", command=self.update_source)
        self.ginfo_checkbox.pack(side="left", padx=5)

        self.fias_checkbox = tk.Radiobutton(self.radio_frame, text="–§–ò–ê–°", variable=self.source_var, value="FIAS", command=self.update_source)
        self.fias_checkbox.pack(side="left", padx=5)

        # –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Ä–∞–º–æ–∫ (GinfoFrame –∏ FiasFrame)
        self.frames_container = tk.Frame(root)
        self.frames_container.grid(row=1, column=0, padx=10, pady=5, sticky="ew")  # –†–∞–∑–º–µ—â–µ–Ω–∏–µ –≤–æ –≤—Ç–æ—Ä–æ–π —Å—Ç—Ä–æ–∫–µ

        # –†–∞–º–∫–∏
        self.ginfo_frame = GinfoFrame(self.frames_container, self.log)
        self.fias_frame = FiasFrame(self.frames_container, self.log)

        # –ò–∑–Ω–∞—á–∞–ª—å–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ GINFO
        self.ginfo_frame.pack(fill="x")
        self.fias_frame.pack_forget()  # –°–∫—Ä—ã–≤–∞–µ–º –§–ò–ê–°

        # –û–∫–Ω–æ –ª–æ–≥–æ–≤
        self.log_box = scrolledtext.ScrolledText(root, wrap=tk.WORD, width=90, height=20)
        self.log_box.grid(row=2, column=0, padx=10, pady=10)  # –†–∞–∑–º–µ—â–µ–Ω–∏–µ –≤ —Ç—Ä–µ—Ç—å–µ–π —Å—Ç—Ä–æ–∫–µ

    def log(self, message):
        self.log_box.insert(tk.END, message + "\n")
        self.log_box.see(tk.END)

    def update_source(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∏–¥–∏–º–æ—Å—Ç–∏ —Ä–∞–º–æ–∫."""
        source = self.source_var.get()
        self.log(f"üìç –í—ã–±—Ä–∞–Ω –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö: {source}")

        # –°–∫—Ä—ã–≤–∞–µ–º –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω—É–∂–Ω—ã–µ —Ä–∞–º–∫–∏
        if source == "GINFO":
            self.ginfo_frame.pack(fill="x")
            self.fias_frame.pack_forget()  # –°–∫—Ä—ã–≤–∞–µ–º –§–ò–ê–°
        elif source == "FIAS":
            self.fias_frame.pack(fill="x")
            self.ginfo_frame.pack_forget()  # –°–∫—Ä—ã–≤–∞–µ–º GINFO


if __name__ == "__main__":
    root = tk.Tk()
    app = App(root)
    root.mainloop()
