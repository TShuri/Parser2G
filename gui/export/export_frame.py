import tkinter as tk
from tkinter import filedialog, scrolledtext
from core.export_logic import export_data
from db_scripts.gets.get_cities_db import get_all_cities
from db_scripts.gets.get_districts_db import get_districts_for_city  # –Ω–æ–≤—ã–π –∏–º–ø–æ—Ä—Ç

class ExportApp:
    def __init__(self, root):
        self.root = root
        self.root.title("üì§ –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ë–î")
        self.root.geometry("600x450")

        # –§–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞
        self.format_var = tk.StringVar(value="json")

        radio_frame = tk.Frame(root)
        radio_frame.pack(pady=10, anchor="w", padx=10)
        tk.Label(radio_frame, text="–§–æ—Ä–º–∞—Ç –≤—ã–≥—Ä—É–∑–∫–∏:").pack(side="left")
        tk.Radiobutton(radio_frame, text="JSON", variable=self.format_var, value="json").pack(side="left", padx=5)
        tk.Radiobutton(radio_frame, text="CSV", variable=self.format_var, value="csv").pack(side="left", padx=5)

        # –§–∏–ª—å—Ç—Ä –ø–æ –≥–æ—Ä–æ–¥—É
        filter_frame = tk.Frame(root)
        filter_frame.pack(pady=10, anchor="w", padx=10)
        tk.Label(filter_frame, text="–§–∏–ª—å—Ç—Ä –ø–æ –≥–æ—Ä–æ–¥—É:").pack(side="left")

        self.city_var = tk.StringVar(value="–í—Å–µ")
        cities = ["–í—Å–µ"] + get_all_cities()
        self.city_menu = tk.OptionMenu(filter_frame, self.city_var, *cities, command=self.on_city_change)
        self.city_menu.pack(side="left", padx=5)

        # –§–∏–ª—å—Ç—Ä –ø–æ —Ä–∞–π–æ–Ω—É
        district_frame = tk.Frame(root)
        district_frame.pack(pady=10, anchor="w", padx=10)
        tk.Label(district_frame, text="–§–∏–ª—å—Ç—Ä –ø–æ —Ä–∞–π–æ–Ω—É:").pack(side="left")

        self.district_var = tk.StringVar(value="–í—Å–µ")
        self.district_menu = tk.OptionMenu(district_frame, self.district_var, "–í—Å–µ")
        self.district_menu.pack(side="left", padx=5)

        # –ö–Ω–æ–ø–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞
        export_button = tk.Button(root, text="üíæ –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å", command=self.export_data)
        export_button.pack(pady=10)

        # –û–∫–Ω–æ –ª–æ–≥–æ–≤
        self.log_box = scrolledtext.ScrolledText(root, wrap=tk.WORD, height=10)
        self.log_box.pack(fill="both", expand=True, padx=10, pady=10)

    def on_city_change(self, selected_city):
        # –ü—Ä–∏ –≤—ã–±–æ—Ä–µ –≥–æ—Ä–æ–¥–∞ –æ–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —Ä–∞–π–æ–Ω–æ–≤
        if selected_city == "–í—Å–µ":
            districts = ["–í—Å–µ"]
        else:
            districts = ["–í—Å–µ"] + get_districts_for_city(selected_city)

        self.district_var.set("–í—Å–µ")

        menu = self.district_menu["menu"]
        menu.delete(0, "end")

        for d in districts:
            menu.add_command(label=d, command=lambda value=d: self.district_var.set(value))

    def export_data(self):
        fmt = self.format_var.get()
        city = self.city_var.get()
        district = self.district_var.get()
        filters = {}

        if city != "–í—Å–µ":
            filters["city"] = city
        if district != "–í—Å–µ":
            filters["district"] = district

        filetypes = [("JSON files", "*.json")] if fmt == "json" else [("CSV files", "*.csv")]
        extension = "json" if fmt == "json" else "csv"

        file_path = filedialog.asksaveasfilename(defaultextension=f".{extension}", filetypes=filetypes)
        if not file_path:
            self.log("‚ö†Ô∏è –û—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.")
            return

        try:
            count = export_data(file_path, fmt, filters)
            self.log(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –≤—ã–≥—Ä—É–∂–µ–Ω–æ {count} –∑–∞–ø–∏—Å–µ–π –≤ {file_path}")
        except Exception as e:
            self.log(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ: {e}")

    def log(self, message):
        self.log_box.insert(tk.END, message + "\n")
        self.log_box.see(tk.END)

def main():
    root = tk.Tk()
    app = ExportApp(root)
    root.mainloop()

if __name__ == "__main__":
    main()
