import threading
import tkinter as tk
from parsers.ginfo.get_districts import get_districts
from parsers.ginfo.get_streets_district import get_street_links

class GinfoFrame(tk.LabelFrame):
    def __init__(self, parent, log_func):
        super().__init__(parent, text="GINFO (–î–ª—è –∞–≥–ª–æ–º–µ—Ä–∞—Ü–∏–∏ –ò—Ä–∫—É—Ç—Å–∫–∞)", padx=10, pady=10)
        self.log = log_func
        self.get_districts_func = get_districts

        self.parse_streets_func = get_street_links
        self.parse_addresses_func = None

        self.districts = []  # —Å–ø–∏—Å–æ–∫ —Ä–∞–π–æ–Ω–æ–≤ –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è
        self.selected_district = tk.StringVar()
        self.selected_district.set("–í—ã–±–µ—Ä–∏—Ç–µ –æ–∫—Ä—É–≥")
        self.url_selected_district = ''  # —Ç—É—Ç –±—É–¥–µ—Ç url –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ä–∞–π–æ–Ω–∞

        # –ö–Ω–æ–ø–∫–∞ –ø–æ–ª—É—á–∏—Ç—å —Ä–∞–π–æ–Ω—ã
        tk.Button(self, text="üó∫Ô∏è –ü–æ–ª—É—á–∏—Ç—å –æ–∫—Ä—É–≥–∏", command=self.run_districts).pack(side="left", padx=5)

        # –í—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–∞–π–æ–Ω–∞
        self.district_menu = tk.OptionMenu(self, self.selected_district, ())
        self.district_menu.pack(side="left", padx=5)

        # –ö–Ω–æ–ø–∫–∏ –ø–∞—Ä—Å–∏–Ω–≥–∞ —É–ª–∏—Ü –∏ –∞–¥—Ä–µ—Å–æ–≤
        tk.Button(self, text="üìç –ü–æ–ª—É—á–∏—Ç—å —É–ª–∏—Ü—ã", command=self.run_streets).pack(side="left", padx=5)
        tk.Button(self, text="üè† –ü–æ–ª—É—á–∏—Ç—å –∞–¥—Ä–µ—Å–∞", command=self.run_addresses).pack(side="left", padx=5)

    def run_districts(self):
        self.log("üîÑ GINFO: –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–∫—Ä—É–≥–æ–≤ –≥–æ—Ä–æ–¥–∞...")

        def task():
            try:
                self.districts = self.get_districts_func()

                # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–µ–Ω—é ‚Äî –Ω—É–∂–Ω–æ –¥–µ–ª–∞—Ç—å –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –ø–æ—Ç–æ–∫–µ UI!
                def update_menu():
                    menu = self.district_menu["menu"]
                    menu.delete(0, "end")
                    self._district_name_to_url = {}

                    for district in self.districts:
                        name = district['name']
                        url = district.get('url', '')
                        self._district_name_to_url[name] = url

                        menu.add_command(
                            label=name,
                            command=lambda n=name: self._on_district_selected(n)
                        )

                    if self.districts:
                        first_name = self.districts[0]['name']
                        self.selected_district.set(first_name)
                        self.url_selected_district = self._district_name_to_url.get(first_name, '')

                    for district in self.districts:
                        self.log(f"{district['name']}")

                    self.log(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –æ–∫—Ä—É–≥–æ–≤: {len(self.districts)}")

                # –í Tkinter –æ–±–Ω–æ–≤–ª—è—Ç—å UI –∏–∑ –¥—Ä—É–≥–æ–≥–æ –ø–æ—Ç–æ–∫–∞ –Ω–µ–ª—å–∑—è ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ–º after
                self.district_menu.after(0, update_menu)

            except Exception as e:
                self.log(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ–∫—Ä—É–≥–æ–≤: {e}")

        threading.Thread(target=task, daemon=True).start()

    def _on_district_selected(self, name):
        self.selected_district.set(name)
        self.url_selected_district = self._district_name_to_url.get(name, '')
        self.log(f"‚ÑπÔ∏è –í—ã–±—Ä–∞–Ω –æ–∫—Ä—É–≥: {name}, url: {self.url_selected_district}")

    def run_streets(self):
        district = self.selected_district.get()
        if district == "–í—ã–±–µ—Ä–∏—Ç–µ –æ–∫—Ä—É–≥":
            self.log("‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–∫—Ä—É–≥ –ø–µ—Ä–µ–¥ –ø–∞—Ä—Å–∏–Ω–≥–æ–º —É–ª–∏—Ü.")
            return
        self.log(f"üîÑ GINFO: –ó–∞–ø—É—Å–∫ –ø–∞—Ä—Å–∏–Ω–≥–∞ —É–ª–∏—Ü —Ä–∞–π–æ–Ω–∞: {district} (URL: {self.url_selected_district})...")

        def task():
            try:
                if self.parse_streets_func:
                    streets = self.parse_streets_func(self.url_selected_district, self.log)
                    self.log(f"‚úÖ –ü–∞—Ä—Å–∏–Ω–≥ –∑–∞–≤–µ—Ä—à—ë–Ω. –ù–∞–π–¥–µ–Ω–æ —É–ª–∏—Ü: {len(streets)}")
                    self.log(f"‚úÖ {len(streets)} —É–ª–∏—Ü –∑–∞–ø–∏—Å–∞–Ω–æ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö")
                    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å UI, –Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ–∫–∞–∑–∞—Ç—å —É–ª–∏—Ü—ã
                else:
                    self.log("‚ö†Ô∏è –§—É–Ω–∫—Ü–∏—è –ø–∞—Ä—Å–∏–Ω–≥–∞ —É–ª–∏—Ü –Ω–µ –∑–∞–¥–∞–Ω–∞.")
            except Exception as e:
                self.log(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ —É–ª–∏—Ü: {e}")

        threading.Thread(target=task, daemon=True).start()

    def run_addresses(self):
        district = self.selected_district.get()
        if district == "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–π–æ–Ω":
            self.log("‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–π–æ–Ω –ø–µ—Ä–µ–¥ –ø–∞—Ä—Å–∏–Ω–≥–æ–º –∞–¥—Ä–µ—Å–æ–≤.")
            return
        self.log(f"üîÑ GINFO: –ó–∞–ø—É—Å–∫ –ø–∞—Ä—Å–∏–Ω–≥–∞ –∞–¥—Ä–µ—Å–æ–≤ —Ä–∞–π–æ–Ω–∞: {district} (URL: {self.url_selected_district})...")
        try:
            if self.parse_addresses_func:
                self.parse_addresses_func(self.url_selected_district)
                self.log("‚úÖ –ê–¥—Ä–µ—Å–∞ GINFO —É—Å–ø–µ—à–Ω–æ —Å–ø–∞—Ä—Å–µ–Ω—ã.")
            else:
                self.log("‚ö†Ô∏è –§—É–Ω–∫—Ü–∏—è –ø–∞—Ä—Å–∏–Ω–≥–∞ –∞–¥—Ä–µ—Å–æ–≤ –Ω–µ –∑–∞–¥–∞–Ω–∞.")
        except Exception as e:
            self.log(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ –∞–¥—Ä–µ—Å–æ–≤: {e}")
